@model PagedList.IPagedList<WindowsStore_Version3.Models.Movie>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Movies", FormMethod.Get))
{
    @Html.DropDownList("catename", (IEnumerable<SelectListItem>)ViewBag.shownamecate)
    @Html.TextBox("Search_Data", ViewBag.FilterValue as string)
    <input type="submit" name="submit" value="Find" />
}
@if (Model.Count() == 0)
{
    <p>Records not found</p>
}
@ViewBag.Error

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
        </th>
        <th>
            @Html.ActionLink("Enrollment Date", "Index", new { Sorting_Order = ViewBag.SortingDate, Filter_Value = ViewBag.FilterValue })
        </th>
        <th>
            RunningTime
        </th>
        <th>
            BoxOffice
        </th>
        <th>
            GenreName
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RunningTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BoxOffice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre.GenreName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.MovieId }) |
                @Html.ActionLink("Details", "Details", new { id = item.MovieId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.MovieId })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, Page_No => Url.Action("Index", new { Page_No, Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue }))
